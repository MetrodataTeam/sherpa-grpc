[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.poetry]
authors = ["Deo <liangzhanzhao@metrodata.cn>"]
description = "grpc server for voice using sherpa-onnx"
name = "sherpa-grpc-server"
package-mode = false
readme = "README.md"
version = "0.0.0"

[tool.poetry.dependencies]
av = ">=14.0.1"
betterproto = "v2.0.0b7"
grpclib = {version = ">=0.4.7", extras = ["protobuf"]}
numpy = ">2"
pydantic-settings = ">=2.0.3"
python = ">=3.11.0,<3.13"
sherpa-onnx = "1.11.3"
soundfile = "^0.13.1"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
betterproto = {extras = ["compiler"], version = "v2.0.0b7"}
grpcio-tools = ">=1.59.0"
pytest = "^8.2.0"
pytest-cov = ">=6.0.0"
ruff = ">=0.11.5"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]

indent-width = 2
line-length = 80

target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
ignore = ["E722"]
select = ["E4", "E7", "E9", "F"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
